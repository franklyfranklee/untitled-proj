const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken');

// User Registration
app.post('/api/register', async (req, res) => {
    const { name, email, password, location, contactInfo } = req.body;
    const hashedPassword = await bcrypt.hash(password, 10);
    const newUser = new User({ name, email, password: hashedPassword, location, contactInfo });
    await newUser.save();
    res.status(201).json({ message: 'User registered successfully' });
});

// User Login
app.post('/api/login', async (req, res) => {
    const { email, password } = req.body;
    const user = await User.findOne({ email });
    if (user && await bcrypt.compare(password, user.password)) {
        const token = jwt.sign({ userId: user._id }, 'secret_key'); // Replace with a strong secret key
        res.json({ token });
    } else {
        res.status(401).json({ message: 'Invalid credentials' });
    }
});
